package com.razorpaypoc.util;

import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Base64;

import javax.crypto.Mac;
import javax.crypto.spec.SecretKeySpec;

import org.apache.commons.codec.binary.Hex;

public class RazorpaySignatureUtil {

	private boolean verifyRazorpaySignature(String orderId, String paymentId, String razorpaySignature) {
	    String generatedSignature = ""; // Logic to generate signature from orderId and paymentId

	    // Use your Razorpay secret to generate the signature
	    try {
	        String message = orderId + "|" + paymentId;
	        String secret = "YOUR_RAZORPAY_SECRET"; // Fetch from properties or environment variable
	        MessageDigest digest = MessageDigest.getInstance("SHA-256");
	        digest.update((message + secret).getBytes(StandardCharsets.UTF_8));
	        byte[] hash = digest.digest();
	        generatedSignature = Base64.getEncoder().encodeToString(hash);
	    } catch (NoSuchAlgorithmException e) {
	        e.printStackTrace();
	    }

	    return generatedSignature.equals(razorpaySignature);
	}


	private static String hmacSHA256(String data, String secret) throws Exception {
		Mac sha256_HMAC = Mac.getInstance("HmacSHA256");
		SecretKeySpec secret_key = new SecretKeySpec(secret.getBytes(), "HmacSHA256");
		sha256_HMAC.init(secret_key);
		return new String(Hex.encodeHex(sha256_HMAC.doFinal(data.getBytes())));
	}
}
